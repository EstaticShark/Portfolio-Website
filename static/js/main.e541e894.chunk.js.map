{"version":3,"sources":["Sidebar.js","WordSlots.js","HomePage.js","ProjectNode.js","ProjectImages.js","ProjectsPage.js","App.js","serviceWorker.js","index.js","assets/Intro-image-1.jpg","assets/home-background.mp4","assets/Stem-notes-1.PNG","assets/Stem-notes-2.PNG","assets/Stem-notes-3.png"],"names":["SideBar","props","state","id","sidebarClassName","children","sidebar","className","src","alt","type","formAction","href","docked","pullRight","transitions","Component","WordSlots","slotState","this","HomePage","yPos","window","pageYOffset","backgroundVideo","autoPlay","loop","muted","introImage","ProjectsNode","stemImage1","stemImage2","stemImage3","title","time","content","images","isOpen","ProjectsPage","projectNodes","columnWidth","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e541e894.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FaGithub, FaLinkedin, FaFacebook} from 'react-icons/fa';\r\nimport { IoMdMail } from 'react-icons/io'\r\nimport Sidebar from \"react-sidebar\";\r\n\r\nimport './Sidebar.css';\r\n\r\nclass SideBar extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //State initilization\r\n    this.state = {\r\n\r\n    };\r\n\r\n    //Binding functions\r\n\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n        <div id=\"App-side-bar-container\">\r\n          <Sidebar\r\n            //rootClassName=\"Side-bar-root\"\r\n            sidebarClassName=\"Side-bar\"\r\n            //contentClassName=\"Side-bar-root\"\r\n            //overlayClassName=\"Side-bar-root\"\r\n            //styles={{ sidebar: { background: \"white\" } }}\r\n            children={\r\n              <div></div>\r\n              }\r\n            sidebar={\r\n              <div id=\"Side-bar-content\">\r\n                <header className=\"\">\r\n                  <img  src=\"https://avatarfiles.alphacoders.com/161/thumb-161188.png\" alt=\"Blue\"\r\n                        id=\"Profile-picture\"\r\n                        className=\"img-fluid rounded-circle\"/>\r\n                  \r\n                  <h4 className=\"my-3\">\r\n                    <b>Martin Chak</b>\r\n                  </h4>\r\n                </header>\r\n\r\n                <div className=\"d-flex flex-column align-items-center my-3 mx-4 Side-bar-cards-container\">\r\n                  \r\n                  <div id=\"Side-bar-nav\">\r\n\r\n                      <form className=\"Side-bar-nav-link\">\r\n                        <button className=\"Side-bar-nav-submit\" type=\"submit\" formAction=\"#home\">Home</button>\r\n                      </form>\r\n\r\n                      <form className=\"Side-bar-nav-link\">\r\n                        <button className=\"Side-bar-nav-submit\" type=\"submit\" formAction=\"#projects\">Projects</button>\r\n                      </form>\r\n\r\n                      <form className=\"Side-bar-nav-link\">\r\n                        <button className=\"Side-bar-nav-submit\" type=\"submit\" formAction=\"#metrics\">Metrics</button>\r\n                      </form>\r\n                    \r\n                  </div>\r\n\r\n                  <div id=\"Side-bar-contacts\">\r\n                    <div className=\"card-body Side-bar-card-line\">\r\n                      <a className=\"Side-bar-card-link\" href=\"mailto:martinchakchak@yahoo.ca\">\r\n                        <IoMdMail className=\"Side-bar-card-icon\"/>\r\n                        <br/>\r\n                        <p className=\"Side-bar-card-text email-text\">martinchakchak@yahoo.ca</p>\r\n                      </a>\r\n                    </div>\r\n\r\n                    <div className=\"card-body Side-bar-card-line\">\r\n                      <a className=\"Side-bar-card-link\" href=\"https://github.com/EstaticShark\">\r\n                        <FaGithub className=\"Side-bar-card-icon\"/> \r\n                        <br/>\r\n                        <p className=\"Side-bar-card-text\">Github</p>\r\n                      </a>\r\n                    </div>\r\n\r\n                    <div className=\"card-body Side-bar-card-line\">\r\n                      <a className=\"Side-bar-card-link\" href=\"https://www.linkedin.com/in/martinchak\">\r\n                          <FaLinkedin className=\"Side-bar-card-icon\"/>\r\n                          <br/>\r\n                          <p className=\"Side-bar-card-text\">Linkedin</p>\r\n                      </a>\r\n                    </div>\r\n\r\n                    <div className=\"card-body Side-bar-card-line\">\r\n                      <a className=\"Side-bar-card-link\" href=\"https://www.facebook.com/martin.chak.33\">\r\n                          <FaFacebook className=\"Side-bar-card-icon\"/>\r\n                          <br/>\r\n                          <p className=\"Side-bar-card-text\">Facebook</p>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              }\r\n            docked={true}\r\n            pullRight={false}\r\n            transitions={false}\r\n          >\r\n          </Sidebar>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { Component } from 'react';\r\n\r\nimport './WordSlots.css';\r\n\r\nclass WordSlots extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n\r\n    //State initilization\r\n    this.state = {\r\n        slotState:[\"Full-Stack Developer\", \"Coffee Enthusiast\"]\r\n    };\r\n\r\n    //Binding functions\r\n\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n        <div id=\"WordSlots-container\">\r\n            <span id=\"Intro-header-text\">Aspiring</span>\r\n            <div id=\"Intro-header-slots\">\r\n                <p>{this.state.slotState[0]}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WordSlots;\r\n","import React, { Component } from 'react';\r\nimport backgroundVideo from '../src/assets/home-background.mp4'\r\nimport introImage from '../src/assets/Intro-image-1.jpg'\r\n\r\nimport './HomePage.css';\r\n\r\nimport WordSlots from './WordSlots';\r\n\r\nclass HomePage extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //State initilization\r\n    this.state = {\r\n        yPos: window.pageYOffset\r\n    };\r\n\r\n    //Binding functions\r\n\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n        <div id=\"Home-container\" className=\"#home\">\r\n              \r\n              <div id=\"Intro-header\">\r\n\r\n                <video id=\"Intro-animation\" src={backgroundVideo} autoPlay loop muted/>\r\n                <div id=\"Intro-gradient-container\"/>\r\n                <div id=\"Intro-gradient-container-side\"/>\r\n\r\n                <div id=\"Intro-header-content\">\r\n                  <div id=\"Intro-header-title\">\r\n                    <WordSlots/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div id=\"Intro-content\">\r\n                <h2>About Me</h2>\r\n\r\n                <p id=\"Intro-text\">\r\n                  I am currently a second year undergraduate student at the University of Toronto\r\n                  studying to graduate with a specialist in computer science and a major in mathematics. \r\n                  My goal is to become a full-stack developer.\r\n                  <br/><br/>\r\n                  I enjoy coding and do a lot of it on the side. I have working knowledge with \r\n                  both front and back end technologies. On the front-end, I have worked with ReactJS,\r\n                  Java Script and a couple CSS frameworks like SASS. I am more experienced with\r\n                  the back-end of things, working with API creation libraries such as Flask and\r\n                  express.js, databasing with Firebase and MongoDB, and utilizing cloud platforms\r\n                  such as AWS, Google Cloud Services, etc.\r\n                  <br/><br/>\r\n                  I am looking for 2020 summer internships at the moment, if you're interested you\r\n                  can look at my <a href=\"https://github.com/EstaticShark\">resume.</a>\r\n                </p>\r\n                <img id=\"Intro-picture\" src={introImage} alt=\"Cannot be loaded\"/>\r\n              </div>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from 'react';\r\n\r\nimport './ProjectNode.css';\r\nimport images from './ProjectImages.js'\r\n\r\n\r\nclass ProjectsNode extends Component{  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //State initilization\r\n    this.state = {\r\n      title: this.props.title,\r\n      time: this.props.time,\r\n      content: this.props.content,\r\n      images: this.props.images,\r\n      isOpen: false\r\n    };\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"Node-item\">\r\n        <p>Testing</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProjectsNode;\r\n","import stemImage1 from \"../src/assets/Stem-notes-1.PNG\"\r\nimport stemImage2 from \"../src/assets/Stem-notes-2.PNG\"\r\nimport stemImage3 from \"../src/assets/Stem-notes-3.png\"\r\nimport introImage from '../src/assets/Intro-image-1.jpg'\r\n\r\nconst projectImages = [\r\n    stemImage1,\r\n    stemImage2,\r\n    stemImage3,\r\n    introImage\r\n    ];\r\n  \r\n  export default projectImages;","import React, { Component } from 'react';\r\nimport ProjectNode from './ProjectNode.js';\r\nimport StackGrid from \"react-stack-grid\";\r\n\r\nimport './ProjectsPage.css';\r\n\r\nclass ProjectsPage extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //State initilization\r\n    this.state = {\r\n        \r\n    };\r\n\r\n    //Binding functions\r\n\r\n  }\r\n  \r\n  render() {\r\n    const projectNodes = [\r\n      <ProjectNode\r\n              title={\"Stem Notes\"}\r\n              time={\"January 2020\"}\r\n              content={\"Created an iPad compatible notes application with team mates at UofT Hacks 2020.\"\r\n                      + \" Application would take drawn equations and text from a notes application and\"\r\n                      + \" use OCR to convert notes to LaTeX documents. I was responsible for the backend,\"\r\n                      + \" where I worked on connecting the iPad front end with the OCR program using Google\"\r\n                      + \" Cloud Services and maintained the Firebase DB that contained the LaTeX.\"}\r\n              images={[0, 1]}\r\n            />\r\n    ]\r\n\r\n\r\n    return (\r\n        <div id=\"Projects-container\" className=\"#projects\">\r\n          <div id=\"Projects-header\">\r\n            <h2>Projects</h2>\r\n          </div>\r\n\r\n          <div id=\"Node-container\">\r\n          <StackGrid\r\n            columnWidth={150}\r\n          >\r\n            {projectNodes[0]}\r\n            {projectNodes[0]}\r\n            {projectNodes[0]}\r\n            {projectNodes[0]}\r\n            {projectNodes[0]}\r\n            {projectNodes[0]}\r\n          </StackGrid>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectsPage;\r\n","import React, { Component } from 'react';\nimport SideBar from './Sidebar.js'\nimport HomePage from './HomePage.js'\nimport ProjectsPage from './ProjectsPage.js'\n\nimport './App.css';\nimport './Sidebar.css';\nimport './HomePage.css';\nimport './ProjectsPage.css';\nimport './MetricsPage.css';\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n\n    //State initilization\n    this.state = {\n\n    };\n\n    //Binding functions\n\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        \n        <SideBar/>\n        \n        <div className=\"App-content\">\n          <HomePage/>\n\n          <ProjectsPage/>\n          \n          <div className=\"#metrics\">\n              <div id=\"Metrics-container\">\n                <div id=\"Metrics-content\">\n                  <h2 id=\"Temp-text\">\n                    Metrics Coming Soon\n                  </h2>\n                </div>\n              </div>\n          </div>\n        </div>\n        \n        <div id=\"Dev-content\">\n          <p id=\"Dev-content-text\">Work in progress, mobile version not available yet</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Intro-image-1.73690283.jpg\";","module.exports = __webpack_public_path__ + \"static/media/home-background.fe039989.mp4\";","module.exports = __webpack_public_path__ + \"static/media/Stem-notes-1.510cdcbc.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Stem-notes-2.3b41773c.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Stem-notes-3.2bcfbb1c.png\";"],"sourceRoot":""}